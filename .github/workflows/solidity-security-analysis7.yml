name: Solidity Security Analysis

on:
  workflow_dispatch:
    
    inputs:
      name:
        description: "Full Name"
        required: true
      email:
        description: "Email Address"
        required: true
      contract:
        description: "Smart Contract Address"
        required: true
jobs:
  security_analysis:
    runs-on: self-hosted  # Instead of 'ubuntu-latest'
    steps:
      - name: Set up job
        run: echo "Starting Solidity Security Analysis"

      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Upload Security Report to GitHub
        env:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}  # Use locally stored token
        run: |
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/Aegis-Vault/AegisVault/issues \
          -d '{"title": "Security Report", "body": "New security report uploaded."}'
     
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Save submission data
        run: |
          echo "Name: ${{ github.event.inputs.name }}" >> submissions.txt
          echo "Email: ${{ github.event.inputs.email }}" >> submissions.txt
          echo "Contract: ${{ github.event.inputs.contract }}" >> submissions.txt
          echo "---------------------------------" >> submissions.txt

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add submissions.txt
          git commit -m "New security scan request"
          git push https://$GITHUB_TOKEN@github.com/Aegis-Vault/AegisVault.git      
    
      # Install Solidity Compiler
      - name: Install Solidity Compiler
        run: |
          sudo add-apt-repository ppa:ethereum/ethereum -y
          sudo apt-get update
          sudo apt-get install -y solc
          solc --version

      # Install Mythril
      - name: Install Mythril
        run: |
          python3 -m pip install --upgrade pip
          pip3 install mythril

      - name: Run Mythril Analysis
        run: myth analyze contracts/*.sol --execution-timeout 300 --max-depth 30 --solver-timeout 1000 > mythril-report.txt || true

      - name: Upload Mythril Report
        uses: actions/upload-artifact@v4
        with:
          name: mythril-report
          path: mythril-report.txt

      # Install Slither
      - name: Install Slither
        run: |
          python3 -m pip install slither-analyzer

      - name: Run Slither Analysis
        run: slither contracts/*.sol --json slither-report.json || true
                env:
          GH_PAT: ${{ secrets.GH_TOKEN }}  # Use the secret securely
        run: |
          echo "Triggering GitHub Action with PAT"

      - name: Upload Slither Report
        uses: actions/upload-artifact@v4
        with:
          name: slither-report
          path: slither-report.json

      # Install SmartCheck
      - name: Install SmartCheck
        run: |
          git clone https://github.com/smartdec/smartcheck.git
          cd smartcheck
          pip3 install --upgrade pip
          pip3 install -r requirements.txt || true

      - name: Run SmartCheck Analysis
        run: |
          cd smartcheck
          python3 smartcheck.py -p ../contracts/ > smartcheck-report.txt || true

      - name: Upload SmartCheck Report
        uses: actions/upload-artifact@v4
        with:
          name: smartcheck-report
          path: smartcheck-report.txt
